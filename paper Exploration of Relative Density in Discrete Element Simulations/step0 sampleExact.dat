model new

def par
    r_box = 100 / 2 * 0.001
    h_box = 60 * 0.001 
    t_box = h_box * 0.4
    s_domain = 2
    
    poro_sample = 0.187
    
    ; contact
    kratio = 2
    fric = 0.6
    fric_sample = fric * 0.3
    emod = 5e7
    
    ; contact wall
    kn_wall = emod
    
    den = 2600  ; 
    
    rmax = 0.7 * 0.001 ; 1mm
    rmin = 0.5 * 0.001
    seed = 10000
end
@par

fish def mesure_porosity_overall()
wall_top = wall.find(3)
wall_bot = wall.find(6)

local dis = wall.dis.y(wall_top) - wall.dis.y(wall_bot)

local V_current = (h_box + dis) * r_box * 2
local Vs = 0.0

loop foreach bp ball.list
    Vs += ball.vol(bp)
endloop

n_current = 1 - Vs/V_current
io.out(n_current)
end


model random @seed
model domain extent [-r_box * s_domain] [r_box * s_domain] ...
                    [-h_box * s_domain] [h_box * s_domain]
                    
;top
wall generate id 1 box [-r_box - t_box] [-r_box] ...
                        0 [h_box * 0.5 * 1.2] one-wall
wall generate id 2 box [r_box] [r_box + t_box] ... 
                        0 [h_box * 0.5 * 1.2] one-wall
wall create id 3 vertices [-r_box] [h_box*0.5] [r_box] [h_box*0.5]

; bot
wall generate id 4 box [-r_box - t_box] [-r_box] ...
                       [-h_box * 0.5 * 1.2] 0 one-wall
wall generate id 5 box [r_box] [r_box + t_box] ... 
                        [-h_box * 0.5 * 1.2] 0 one-wall
wall create id 6 vertices  [-r_box] [-h_box*0.5] [r_box] [-h_box*0.5]


; different fri lead to different samples    
ball distribute radius @rmin @rmax ...
              poro @poro_sample ... 
              box [-r_box] [r_box] ...
                  [-h_box * 0.5] [h_box * 0.5]

; contact ball-ball and ball-facet
ball attribute density @den damp 0.7
;contact cmat default type ball-ball ...
;                   model linear ...
;                   property kn [kn] ks [kn/kratio] fric [fric] dp_nratio 0.2

contact cmat default type ball-ball ...
                   model linear method deform emod [emod] kratio [kratio]...
                   property fric [fric_sample] dp_nratio 0.2
               
contact cmat default type ball-facet ...
                   model linear      ...
                   property kn [kn_wall] dp_nratio 0.2
; cal  
[nball_bak = ball.num]
model cycle 2000 calm 20
ball delete range pos-x [-r_box] [r_box] not
ball delete range pos-y [-h_box*0.5] [h_box*0.5] not
[nball = ball.num]
;;
;model gravity 9.8s
model mec timestep scale
model solve 


model save "sample_sy100_0.3f"
[sy_sample = wall.force.contact.y(wall.find(3))/(r_box*2)/1000]

[io.out("ball deleted:" + string(nball - nball_bak) + " final:" + string(nball))]
[io.out("wall stress:" + string(sy_sample))]
@mesure_porosity_overall()
